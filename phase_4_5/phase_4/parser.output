State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmts: stmt
    4      | stmts stmt

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | break
   11     | continue
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 break: BREAK SEMICOLON

   16 continue: CONTINUE SEMICOLON

   17 assignexpr: lvalue ASSIGN expr

   18 expr: expr PLUS expr
   19     | expr MINUS expr
   20     | expr MULTIPLY expr
   21     | expr DIVIDE expr
   22     | expr MODULO expr
   23     | expr EQUAL expr
   24     | expr DIFFERENT expr
   25     | expr BIGGER expr
   26     | expr BIGGER_EQUAL expr
   27     | expr SMALLER expr
   28     | expr SMALLER_EQUAL expr
   29     | expr AND expr
   30     | expr OR expr
   31     | assignexpr
   32     | term

   33 term: LPARENTHESIS expr RPARENTHESIS
   34     | MINUS expr
   35     | NOT expr
   36     | DPLUS lvalue
   37     | lvalue DPLUS
   38     | DMINUS lvalue
   39     | lvalue DMINUS
   40     | primary

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LPARENTHESIS funcdef RPARENTHESIS
   45        | const

   46 lvalue: IDENTIFIER
   47       | LOCL IDENTIFIER
   48       | DCOLON IDENTIFIER
   49       | member

   50 member: lvalue DOT IDENTIFIER
   51       | lvalue LSBRACKET expr RSBRACKET
   52       | call DOT IDENTIFIER
   53       | call LSBRACKET expr RSBRACKET

   54 call: call LPARENTHESIS elist RPARENTHESIS
   55     | lvalue callsuffix
   56     | LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: LPARENTHESIS elist RPARENTHESIS

   60 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS

   61 elist: elist COMMA expr
   62      | expr
   63      | %empty

   64 objectdef: LSBRACKET elist RSBRACKET
   65          | LSBRACKET indexed RSBRACKET

   66 indexed: indexed COMMA indexedelem
   67        | indexedelem

   68 indexedelem: LBRACKET expr COLON expr RBRACKET

   69 @1: %empty

   70 block: LBRACKET @1 stmt program RBRACKET

   71 $@2: %empty

   72 block: LBRACKET $@2 RBRACKET

   73 funcblockstart: %empty

   74 funcblockend: %empty

   75 funcname: IDENTIFIER
   76         | %empty

   77 funcprefix: FUNCTION funcname

   78 $@3: %empty

   79 $@4: %empty

   80 funcargs: LPARENTHESIS $@3 idlist $@4 RPARENTHESIS

   81 funcbody: block

   82 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   83 const: INTEGER
   84      | STRING
   85      | FLOAT
   86      | NIL
   87      | TRUE
   88      | FALSE

   89 idlist: IDENTIFIER COMMA idlist
   90       | IDENTIFIER
   91       | %empty

   92 ifprefix: IF LPARENTHESIS expr RPARENTHESIS

   93 elseprefix: ELSE

   94 ifstmt: ifprefix stmt
   95       | ifprefix stmt elseprefix stmt

   96 loopstart: %empty

   97 loopend: %empty

   98 loopstmt: loopstart stmt loopend

   99 whilestart: WHILE

  100 whilecond: LPARENTHESIS expr RPARENTHESIS

  101 whilestmt: whilestart whilecond loopstmt

  102 N: %empty

  103 M: %empty

  104 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr SEMICOLON

  105 forstmt: forprefix N elist RPARENTHESIS N loopstmt N

  106 returnstmt: RETURN expr SEMICOLON
  107           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 46 47 48 50 52 60 75 89 90
STRING (259) 84
INTEGER (260) 83
FLOAT (261) 85
BREAK (262) 15
CONTINUE (263) 16
IF (264) 92
ELSE (265) 93
WHILE (266) 99
FOR (267) 104
FUNCTION (268) 77
RETURN (269) 106 107
LOCL (270) 47
TRUE (271) 87
FALSE (272) 88
NIL (273) 86
AND (274) 29
OR (275) 30
NOT (276) 35
ASSIGN (277) 17
PLUS (278) 18
MINUS (279) 19 34
MULTIPLY (280) 20
DIVIDE (281) 21
MODULO (282) 22
DPLUS (283) 36 37
DMINUS (284) 38 39
EQUAL (285) 23
DIFFERENT (286) 24
BIGGER (287) 25
SMALLER (288) 27
BIGGER_EQUAL (289) 26
SMALLER_EQUAL (290) 28
LBRACKET (291) 68 70 72
RBRACKET (292) 68 70 72
LSBRACKET (293) 51 53 64 65
RSBRACKET (294) 51 53 64 65
LPARENTHESIS (295) 33 44 54 56 59 60 80 92 100 104
RPARENTHESIS (296) 33 44 54 56 59 60 80 92 100 105
SEMICOLON (297) 5 14 15 16 104 106 107
COMMA (298) 61 66 89
COLON (299) 68
DCOLON (300) 48
DOT (301) 50 52
DDOT (302) 60
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0 70
stmts (51)
    on left: 3 4, on right: 1 4
stmt (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 4 70 94 95 98
break (53)
    on left: 15, on right: 10
continue (54)
    on left: 16, on right: 11
assignexpr (55)
    on left: 17, on right: 31
expr (56)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    5 17 18 19 20 21 22 23 24 25 26 27 28 29 30 33 34 35 51 53 61 62
    68 92 100 104 106
term (57)
    on left: 33 34 35 36 37 38 39 40, on right: 32
primary (58)
    on left: 41 42 43 44 45, on right: 40
lvalue (59)
    on left: 46 47 48 49, on right: 17 36 37 38 39 41 50 51 55
member (60)
    on left: 50 51 52 53, on right: 49
call (61)
    on left: 54 55 56, on right: 42 52 53 54
callsuffix (62)
    on left: 57 58, on right: 55
normcall (63)
    on left: 59, on right: 57
methodcall (64)
    on left: 60, on right: 58
elist (65)
    on left: 61 62 63, on right: 54 56 59 60 61 64 104 105
objectdef (66)
    on left: 64 65, on right: 43
indexed (67)
    on left: 66 67, on right: 65 66
indexedelem (68)
    on left: 68, on right: 66 67
block (69)
    on left: 70 72, on right: 12 81
@1 (70)
    on left: 69, on right: 70
$@2 (71)
    on left: 71, on right: 72
funcblockstart (72)
    on left: 73, on right: 82
funcblockend (73)
    on left: 74, on right: 82
funcname (74)
    on left: 75 76, on right: 77
funcprefix (75)
    on left: 77, on right: 82
funcargs (76)
    on left: 80, on right: 82
$@3 (77)
    on left: 78, on right: 80
$@4 (78)
    on left: 79, on right: 80
funcbody (79)
    on left: 81, on right: 82
funcdef (80)
    on left: 82, on right: 13 44 56
const (81)
    on left: 83 84 85 86 87 88, on right: 45
idlist (82)
    on left: 89 90 91, on right: 80 89
ifprefix (83)
    on left: 92, on right: 94 95
elseprefix (84)
    on left: 93, on right: 95
ifstmt (85)
    on left: 94 95, on right: 6
loopstart (86)
    on left: 96, on right: 98
loopend (87)
    on left: 97, on right: 98
loopstmt (88)
    on left: 98, on right: 101 105
whilestart (89)
    on left: 99, on right: 101
whilecond (90)
    on left: 100, on right: 101
whilestmt (91)
    on left: 101, on right: 7
N (92)
    on left: 102, on right: 105
M (93)
    on left: 103, on right: 104
forprefix (94)
    on left: 104, on right: 105
forstmt (95)
    on left: 105, on right: 8
returnstmt (96)
    on left: 106 107, on right: 9


State 0

    0 $accept: . program $end

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 1

   46 lvalue: IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 2

   84 const: STRING .

    $default  reduce using rule 84 (const)


State 3

   83 const: INTEGER .

    $default  reduce using rule 83 (const)


State 4

   85 const: FLOAT .

    $default  reduce using rule 85 (const)


State 5

   15 break: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 6

   16 continue: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 7

   92 ifprefix: IF . LPARENTHESIS expr RPARENTHESIS

    LPARENTHESIS  shift, and go to state 51


State 8

   99 whilestart: WHILE .

    $default  reduce using rule 99 (whilestart)


State 9

  104 forprefix: FOR . LPARENTHESIS elist SEMICOLON M expr SEMICOLON

    LPARENTHESIS  shift, and go to state 52


State 10

   77 funcprefix: FUNCTION . funcname

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 76 (funcname)

    funcname  go to state 54


State 11

  106 returnstmt: RETURN . expr SEMICOLON
  107           | RETURN . SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 55
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 56
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 12

   47 lvalue: LOCL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 13

   87 const: TRUE .

    $default  reduce using rule 87 (const)


State 14

   88 const: FALSE .

    $default  reduce using rule 88 (const)


State 15

   86 const: NIL .

    $default  reduce using rule 86 (const)


State 16

   35 term: NOT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 58
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 17

   34 term: MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 59
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 18

   36 term: DPLUS . lvalue

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 60
    DCOLON        shift, and go to state 24

    lvalue  go to state 61
    member  go to state 35
    call    go to state 62


State 19

   38 term: DMINUS . lvalue

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 60
    DCOLON        shift, and go to state 24

    lvalue  go to state 63
    member  go to state 35
    call    go to state 62


State 20

   70 block: LBRACKET . @1 stmt program RBRACKET
   72      | LBRACKET . $@2 RBRACKET

    RBRACKET  reduce using rule 71 ($@2)
    $default  reduce using rule 69 (@1)

    @1   go to state 64
    $@2  go to state 65


State 21

   64 objectdef: LSBRACKET . elist RSBRACKET
   65          | LSBRACKET . indexed RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 66
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr   go to state 30
    expr         go to state 67
    term         go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 68
    objectdef    go to state 37
    indexed      go to state 69
    indexedelem  go to state 70
    const        go to state 41


State 22

   33 term: LPARENTHESIS . expr RPARENTHESIS
   44 primary: LPARENTHESIS . funcdef RPARENTHESIS
   56 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 10
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 71
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    funcprefix  go to state 39
    funcdef     go to state 72
    const       go to state 41


State 23

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 24

   48 lvalue: DCOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 73


State 25

    0 $accept: program . $end

    $end  shift, and go to state 74


State 26

    1 program: stmts .
    4 stmts: stmts . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 75
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 27

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


State 28

   10 stmt: break .

    $default  reduce using rule 10 (stmt)


State 29

   11 stmt: continue .

    $default  reduce using rule 11 (stmt)


State 30

   31 expr: assignexpr .

    $default  reduce using rule 31 (expr)


State 31

    5 stmt: expr . SEMICOLON
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 89


State 32

   32 expr: term .

    $default  reduce using rule 32 (expr)


State 33

   40 term: primary .

    $default  reduce using rule 40 (term)


State 34

   17 assignexpr: lvalue . ASSIGN expr
   37 term: lvalue . DPLUS
   39     | lvalue . DMINUS
   41 primary: lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . LSBRACKET expr RSBRACKET
   55 call: lvalue . callsuffix

    ASSIGN        shift, and go to state 90
    DPLUS         shift, and go to state 91
    DMINUS        shift, and go to state 92
    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 35

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 36

   42 primary: call .
   52 member: call . DOT IDENTIFIER
   53       | call . LSBRACKET expr RSBRACKET
   54 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 100
    LPARENTHESIS  shift, and go to state 101
    DOT           shift, and go to state 102

    $default  reduce using rule 42 (primary)


State 37

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 38

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 39

   82 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    LPARENTHESIS  shift, and go to state 103

    funcargs  go to state 104


State 40

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 41

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 42

   94 ifstmt: ifprefix . stmt
   95       | ifprefix . stmt elseprefix stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 105
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 43

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 44

  101 whilestmt: whilestart . whilecond loopstmt

    LPARENTHESIS  shift, and go to state 106

    whilecond  go to state 107


State 45

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 46

  105 forstmt: forprefix . N elist RPARENTHESIS N loopstmt N

    $default  reduce using rule 102 (N)

    N  go to state 108


State 47

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 48

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 49

   15 break: BREAK SEMICOLON .

    $default  reduce using rule 15 (break)


State 50

   16 continue: CONTINUE SEMICOLON .

    $default  reduce using rule 16 (continue)


State 51

   92 ifprefix: IF LPARENTHESIS . expr RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 109
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 52

  104 forprefix: FOR LPARENTHESIS . elist SEMICOLON M expr SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 110
    objectdef   go to state 37
    const       go to state 41


State 53

   75 funcname: IDENTIFIER .

    $default  reduce using rule 75 (funcname)


State 54

   77 funcprefix: FUNCTION funcname .

    $default  reduce using rule 77 (funcprefix)


State 55

  107 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


State 56

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  106 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 111


State 57

   47 lvalue: LOCL IDENTIFIER .

    $default  reduce using rule 47 (lvalue)


State 58

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   35 term: NOT expr .

    $default  reduce using rule 35 (term)


State 59

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   34 term: MINUS expr .

    $default  reduce using rule 34 (term)


State 60

   56 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    FUNCTION  shift, and go to state 10

    funcprefix  go to state 39
    funcdef     go to state 112


State 61

   36 term: DPLUS lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . LSBRACKET expr RSBRACKET
   55 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 36 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 62

   52 member: call . DOT IDENTIFIER
   53       | call . LSBRACKET expr RSBRACKET
   54 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 100
    LPARENTHESIS  shift, and go to state 101
    DOT           shift, and go to state 102


State 63

   38 term: DMINUS lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . LSBRACKET expr RSBRACKET
   55 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 38 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 64

   70 block: LBRACKET @1 . stmt program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 113
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 65

   72 block: LBRACKET $@2 . RBRACKET

    RBRACKET  shift, and go to state 114


State 66

   68 indexedelem: LBRACKET . expr COLON expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 115
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 67

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   62 elist: expr .

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 62 (elist)


State 68

   61 elist: elist . COMMA expr
   64 objectdef: LSBRACKET elist . RSBRACKET

    RSBRACKET  shift, and go to state 116
    COMMA      shift, and go to state 117


State 69

   65 objectdef: LSBRACKET indexed . RSBRACKET
   66 indexed: indexed . COMMA indexedelem

    RSBRACKET  shift, and go to state 118
    COMMA      shift, and go to state 119


State 70

   67 indexed: indexedelem .

    $default  reduce using rule 67 (indexed)


State 71

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   33 term: LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 120


State 72

   44 primary: LPARENTHESIS funcdef . RPARENTHESIS
   56 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 121


State 73

   48 lvalue: DCOLON IDENTIFIER .

    $default  reduce using rule 48 (lvalue)


State 74

    0 $accept: program $end .

    $default  accept


State 75

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


State 76

   29 expr: expr AND . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 122
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 77

   30 expr: expr OR . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 123
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 78

   18 expr: expr PLUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 124
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 79

   19 expr: expr MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 125
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 80

   20 expr: expr MULTIPLY . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 126
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 81

   21 expr: expr DIVIDE . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 127
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 82

   22 expr: expr MODULO . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 128
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 83

   23 expr: expr EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 129
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 84

   24 expr: expr DIFFERENT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 130
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 85

   25 expr: expr BIGGER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 131
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 86

   27 expr: expr SMALLER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 132
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 87

   26 expr: expr BIGGER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 133
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 88

   28 expr: expr SMALLER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 134
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 89

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 90

   17 assignexpr: lvalue ASSIGN . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 135
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 91

   37 term: lvalue DPLUS .

    $default  reduce using rule 37 (term)


State 92

   39 term: lvalue DMINUS .

    $default  reduce using rule 39 (term)


State 93

   51 member: lvalue LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 136
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 94

   59 normcall: LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 137
    objectdef   go to state 37
    const       go to state 41


State 95

   50 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 96

   60 methodcall: DDOT . IDENTIFIER LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER  shift, and go to state 139


State 97

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 98

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 99

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 100

   53 member: call LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 140
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 101

   54 call: call LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 141
    objectdef   go to state 37
    const       go to state 41


State 102

   52 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 103

   80 funcargs: LPARENTHESIS . $@3 idlist $@4 RPARENTHESIS

    $default  reduce using rule 78 ($@3)

    $@3  go to state 143


State 104

   82 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 73 (funcblockstart)

    funcblockstart  go to state 144


State 105

   94 ifstmt: ifprefix stmt .
   95       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 94 (ifstmt)]
    $default  reduce using rule 94 (ifstmt)

    elseprefix  go to state 146


State 106

  100 whilecond: LPARENTHESIS . expr RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 147
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 107

  101 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 96 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 149


State 108

  105 forstmt: forprefix N . elist RPARENTHESIS N loopstmt N

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 150
    objectdef   go to state 37
    const       go to state 41


State 109

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   92 ifprefix: IF LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 151


State 110

   61 elist: elist . COMMA expr
  104 forprefix: FOR LPARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 152
    COMMA      shift, and go to state 117


State 111

  106 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 106 (returnstmt)


State 112

   56 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 153


State 113

   70 block: LBRACKET @1 stmt . program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 154
    stmts       go to state 26
    stmt        go to state 27
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 114

   72 block: LBRACKET $@2 RBRACKET .

    $default  reduce using rule 72 (block)


State 115

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   68 indexedelem: LBRACKET expr . COLON expr RBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    COLON          shift, and go to state 155


State 116

   64 objectdef: LSBRACKET elist RSBRACKET .

    $default  reduce using rule 64 (objectdef)


State 117

   61 elist: elist COMMA . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 156
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 118

   65 objectdef: LSBRACKET indexed RSBRACKET .

    $default  reduce using rule 65 (objectdef)


State 119

   66 indexed: indexed COMMA . indexedelem

    LBRACKET  shift, and go to state 66

    indexedelem  go to state 157


State 120

   33 term: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 33 (term)


State 121

   44 primary: LPARENTHESIS funcdef RPARENTHESIS .
   56 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 158

    $default  reduce using rule 44 (primary)


State 122

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 29 (expr)


State 123

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 30 (expr)


State 124

   18 expr: expr . PLUS expr
   18     | expr PLUS expr .
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 125

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   19     | expr MINUS expr .
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 19 (expr)


State 126

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   20     | expr MULTIPLY expr .
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 127

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   21     | expr DIVIDE expr .
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 128

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   22     | expr MODULO expr .
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 129

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   24     | expr DIFFERENT expr .
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 131

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   25     | expr BIGGER expr .
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 132

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   27     | expr SMALLER expr .
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 133

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   26     | expr BIGGER_EQUAL expr .
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 134

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   28     | expr SMALLER_EQUAL expr .
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 135

   17 assignexpr: lvalue ASSIGN expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 17 (assignexpr)


State 136

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   51 member: lvalue LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RSBRACKET      shift, and go to state 159


State 137

   59 normcall: LPARENTHESIS elist . RPARENTHESIS
   61 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 160
    COMMA         shift, and go to state 117


State 138

   50 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 50 (member)


State 139

   60 methodcall: DDOT IDENTIFIER . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 161


State 140

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   53 member: call LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RSBRACKET      shift, and go to state 162


State 141

   54 call: call LPARENTHESIS elist . RPARENTHESIS
   61 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 163
    COMMA         shift, and go to state 117


State 142

   52 member: call DOT IDENTIFIER .

    $default  reduce using rule 52 (member)


State 143

   80 funcargs: LPARENTHESIS $@3 . idlist $@4 RPARENTHESIS

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 91 (idlist)

    idlist  go to state 165


State 144

   82 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    LBRACKET  shift, and go to state 20

    block     go to state 166
    funcbody  go to state 167


State 145

   93 elseprefix: ELSE .

    $default  reduce using rule 93 (elseprefix)


State 146

   95 ifstmt: ifprefix stmt elseprefix . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 168
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 147

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  100 whilecond: LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 169


State 148

   98 loopstmt: loopstart . stmt loopend

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 170
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 149

  101 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 101 (whilestmt)


State 150

   61 elist: elist . COMMA expr
  105 forstmt: forprefix N elist . RPARENTHESIS N loopstmt N

    RPARENTHESIS  shift, and go to state 171
    COMMA         shift, and go to state 117


State 151

   92 ifprefix: IF LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 92 (ifprefix)


State 152

  104 forprefix: FOR LPARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 103 (M)

    M  go to state 172


State 153

   56 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 158


State 154

   70 block: LBRACKET @1 stmt program . RBRACKET

    RBRACKET  shift, and go to state 173


State 155

   68 indexedelem: LBRACKET expr COLON . expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 174
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 156

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   61 elist: elist COMMA expr .

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 61 (elist)


State 157

   66 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 66 (indexed)


State 158

   56 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 175
    objectdef   go to state 37
    const       go to state 41


State 159

   51 member: lvalue LSBRACKET expr RSBRACKET .

    $default  reduce using rule 51 (member)


State 160

   59 normcall: LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 59 (normcall)


State 161

   60 methodcall: DDOT IDENTIFIER LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 63 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 176
    objectdef   go to state 37
    const       go to state 41


State 162

   53 member: call LSBRACKET expr RSBRACKET .

    $default  reduce using rule 53 (member)


State 163

   54 call: call LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 54 (call)


State 164

   89 idlist: IDENTIFIER . COMMA idlist
   90       | IDENTIFIER .

    COMMA  shift, and go to state 177

    $default  reduce using rule 90 (idlist)


State 165

   80 funcargs: LPARENTHESIS $@3 idlist . $@4 RPARENTHESIS

    $default  reduce using rule 79 ($@4)

    $@4  go to state 178


State 166

   81 funcbody: block .

    $default  reduce using rule 81 (funcbody)


State 167

   82 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 74 (funcblockend)

    funcblockend  go to state 179


State 168

   95 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 95 (ifstmt)


State 169

  100 whilecond: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 100 (whilecond)


State 170

   98 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 97 (loopend)

    loopend  go to state 180


State 171

  105 forstmt: forprefix N elist RPARENTHESIS . N loopstmt N

    $default  reduce using rule 102 (N)

    N  go to state 181


State 172

  104 forprefix: FOR LPARENTHESIS elist SEMICOLON M . expr SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 182
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 173

   70 block: LBRACKET @1 stmt program RBRACKET .

    $default  reduce using rule 70 (block)


State 174

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   68 indexedelem: LBRACKET expr COLON expr . RBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RBRACKET       shift, and go to state 183


State 175

   56 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist . RPARENTHESIS
   61 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 184
    COMMA         shift, and go to state 117


State 176

   60 methodcall: DDOT IDENTIFIER LPARENTHESIS elist . RPARENTHESIS
   61 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 185
    COMMA         shift, and go to state 117


State 177

   89 idlist: IDENTIFIER COMMA . idlist

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 91 (idlist)

    idlist  go to state 186


State 178

   80 funcargs: LPARENTHESIS $@3 idlist $@4 . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 187


State 179

   82 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 82 (funcdef)


State 180

   98 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 98 (loopstmt)


State 181

  105 forstmt: forprefix N elist RPARENTHESIS N . loopstmt N

    $default  reduce using rule 96 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 188


State 182

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULTIPLY expr
   21     | expr . DIVIDE expr
   22     | expr . MODULO expr
   23     | expr . EQUAL expr
   24     | expr . DIFFERENT expr
   25     | expr . BIGGER expr
   26     | expr . BIGGER_EQUAL expr
   27     | expr . SMALLER expr
   28     | expr . SMALLER_EQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  104 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 189


State 183

   68 indexedelem: LBRACKET expr COLON expr RBRACKET .

    $default  reduce using rule 68 (indexedelem)


State 184

   56 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 56 (call)


State 185

   60 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 60 (methodcall)


State 186

   89 idlist: IDENTIFIER COMMA idlist .

    $default  reduce using rule 89 (idlist)


State 187

   80 funcargs: LPARENTHESIS $@3 idlist $@4 RPARENTHESIS .

    $default  reduce using rule 80 (funcargs)


State 188

  105 forstmt: forprefix N elist RPARENTHESIS N loopstmt . N

    $default  reduce using rule 102 (N)

    N  go to state 190


State 189

  104 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 104 (forprefix)


State 190

  105 forstmt: forprefix N elist RPARENTHESIS N loopstmt N .

    $default  reduce using rule 105 (forstmt)
