State 105 conflicts: 1 shift/reduce
State 159 conflicts: 13 shift/reduce
State 160 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmts: stmt
    4      | stmts stmt

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | break
   11     | continue
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 break: BREAK SEMICOLON

   16 continue: CONTINUE SEMICOLON

   17 assignexpr: lvalue ASSIGN expr

   18 Z: %empty

   19 expr: expr PLUS expr
   20     | expr MINUS expr
   21     | expr MULTIPLY expr
   22     | expr DIVIDE expr
   23     | expr MODULO expr
   24     | expr EQUAL expr
   25     | expr DIFFERENT expr
   26     | expr BIGGER expr
   27     | expr BIGGER_EQUAL expr
   28     | expr SMALLER expr
   29     | expr SMALLER_EQUAL expr
   30     | expr AND Z expr Z
   31     | expr OR Z expr Z
   32     | assignexpr
   33     | term

   34 term: LPARENTHESIS expr RPARENTHESIS
   35     | MINUS expr
   36     | NOT expr
   37     | DPLUS lvalue
   38     | lvalue DPLUS
   39     | DMINUS lvalue
   40     | lvalue DMINUS
   41     | primary

   42 primary: lvalue
   43        | call
   44        | objectdef
   45        | LPARENTHESIS funcdef RPARENTHESIS
   46        | const

   47 lvalue: IDENTIFIER
   48       | LOCL IDENTIFIER
   49       | DCOLON IDENTIFIER
   50       | member

   51 member: lvalue DOT IDENTIFIER
   52       | lvalue LSBRACKET expr RSBRACKET
   53       | call DOT IDENTIFIER
   54       | call LSBRACKET expr RSBRACKET

   55 call: call LPARENTHESIS elist RPARENTHESIS
   56     | lvalue callsuffix
   57     | LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LPARENTHESIS elist RPARENTHESIS

   61 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS

   62 elist: elist COMMA expr
   63      | expr
   64      | %empty

   65 objectdef: LSBRACKET elist RSBRACKET
   66          | LSBRACKET indexed RSBRACKET

   67 indexed: indexed COMMA indexedelem
   68        | indexedelem

   69 indexedelem: LBRACKET expr COLON expr RBRACKET

   70 @1: %empty

   71 block: LBRACKET @1 stmt program RBRACKET

   72 $@2: %empty

   73 block: LBRACKET $@2 RBRACKET

   74 funcblockstart: %empty

   75 funcblockend: %empty

   76 funcname: IDENTIFIER
   77         | %empty

   78 funcprefix: FUNCTION funcname

   79 $@3: %empty

   80 $@4: %empty

   81 funcargs: LPARENTHESIS $@3 idlist $@4 RPARENTHESIS

   82 funcbody: block

   83 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   84 const: INTEGER
   85      | STRING
   86      | FLOAT
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 idlist: IDENTIFIER COMMA idlist
   91       | IDENTIFIER
   92       | %empty

   93 ifprefix: IF LPARENTHESIS expr RPARENTHESIS

   94 elseprefix: ELSE

   95 ifstmt: ifprefix stmt
   96       | ifprefix stmt elseprefix stmt

   97 loopstart: %empty

   98 loopend: %empty

   99 loopstmt: loopstart stmt loopend

  100 whilestart: WHILE

  101 whilecond: LPARENTHESIS expr RPARENTHESIS

  102 whilestmt: whilestart whilecond loopstmt

  103 N: %empty

  104 M: %empty

  105 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr SEMICOLON

  106 forstmt: forprefix N elist RPARENTHESIS N loopstmt N

  107 returnstmt: RETURN expr SEMICOLON
  108           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 47 48 49 51 53 61 76 90 91
STRING (259) 85
INTEGER (260) 84
FLOAT (261) 86
BREAK (262) 15
CONTINUE (263) 16
IF (264) 93
ELSE (265) 94
WHILE (266) 100
FOR (267) 105
FUNCTION (268) 78
RETURN (269) 107 108
LOCL (270) 48
TRUE (271) 88
FALSE (272) 89
NIL (273) 87
AND (274) 30
OR (275) 31
NOT (276) 36
ASSIGN (277) 17
PLUS (278) 19
MINUS (279) 20 35
MULTIPLY (280) 21
DIVIDE (281) 22
MODULO (282) 23
DPLUS (283) 37 38
DMINUS (284) 39 40
EQUAL (285) 24
DIFFERENT (286) 25
BIGGER (287) 26
SMALLER (288) 28
BIGGER_EQUAL (289) 27
SMALLER_EQUAL (290) 29
LBRACKET (291) 69 71 73
RBRACKET (292) 69 71 73
LSBRACKET (293) 52 54 65 66
RSBRACKET (294) 52 54 65 66
LPARENTHESIS (295) 34 45 55 57 60 61 81 93 101 105
RPARENTHESIS (296) 34 45 55 57 60 61 81 93 101 106
SEMICOLON (297) 5 14 15 16 105 107 108
COMMA (298) 62 67 90
COLON (299) 69
DCOLON (300) 49
DOT (301) 51 53
DDOT (302) 61
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0 71
stmts (51)
    on left: 3 4, on right: 1 4
stmt (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 4 71 95 96 99
break (53)
    on left: 15, on right: 10
continue (54)
    on left: 16, on right: 11
assignexpr (55)
    on left: 17, on right: 32
Z (56)
    on left: 18, on right: 30 31
expr (57)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33, on right:
    5 17 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 52 54 62 63
    69 93 101 105 107
term (58)
    on left: 34 35 36 37 38 39 40 41, on right: 33
primary (59)
    on left: 42 43 44 45 46, on right: 41
lvalue (60)
    on left: 47 48 49 50, on right: 17 37 38 39 40 42 51 52 56
member (61)
    on left: 51 52 53 54, on right: 50
call (62)
    on left: 55 56 57, on right: 43 53 54 55
callsuffix (63)
    on left: 58 59, on right: 56
normcall (64)
    on left: 60, on right: 58
methodcall (65)
    on left: 61, on right: 59
elist (66)
    on left: 62 63 64, on right: 55 57 60 61 62 65 105 106
objectdef (67)
    on left: 65 66, on right: 44
indexed (68)
    on left: 67 68, on right: 66 67
indexedelem (69)
    on left: 69, on right: 67 68
block (70)
    on left: 71 73, on right: 12 82
@1 (71)
    on left: 70, on right: 71
$@2 (72)
    on left: 72, on right: 73
funcblockstart (73)
    on left: 74, on right: 83
funcblockend (74)
    on left: 75, on right: 83
funcname (75)
    on left: 76 77, on right: 78
funcprefix (76)
    on left: 78, on right: 83
funcargs (77)
    on left: 81, on right: 83
$@3 (78)
    on left: 79, on right: 81
$@4 (79)
    on left: 80, on right: 81
funcbody (80)
    on left: 82, on right: 83
funcdef (81)
    on left: 83, on right: 13 45 57
const (82)
    on left: 84 85 86 87 88 89, on right: 46
idlist (83)
    on left: 90 91 92, on right: 81 90
ifprefix (84)
    on left: 93, on right: 95 96
elseprefix (85)
    on left: 94, on right: 96
ifstmt (86)
    on left: 95 96, on right: 6
loopstart (87)
    on left: 97, on right: 99
loopend (88)
    on left: 98, on right: 99
loopstmt (89)
    on left: 99, on right: 102 106
whilestart (90)
    on left: 100, on right: 102
whilecond (91)
    on left: 101, on right: 102
whilestmt (92)
    on left: 102, on right: 7
N (93)
    on left: 103, on right: 106
M (94)
    on left: 104, on right: 105
forprefix (95)
    on left: 105, on right: 106
forstmt (96)
    on left: 106, on right: 8
returnstmt (97)
    on left: 107 108, on right: 9


State 0

    0 $accept: . program $end

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 1

   47 lvalue: IDENTIFIER .

    $default  reduce using rule 47 (lvalue)


State 2

   85 const: STRING .

    $default  reduce using rule 85 (const)


State 3

   84 const: INTEGER .

    $default  reduce using rule 84 (const)


State 4

   86 const: FLOAT .

    $default  reduce using rule 86 (const)


State 5

   15 break: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 6

   16 continue: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 7

   93 ifprefix: IF . LPARENTHESIS expr RPARENTHESIS

    LPARENTHESIS  shift, and go to state 51


State 8

  100 whilestart: WHILE .

    $default  reduce using rule 100 (whilestart)


State 9

  105 forprefix: FOR . LPARENTHESIS elist SEMICOLON M expr SEMICOLON

    LPARENTHESIS  shift, and go to state 52


State 10

   78 funcprefix: FUNCTION . funcname

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 77 (funcname)

    funcname  go to state 54


State 11

  107 returnstmt: RETURN . expr SEMICOLON
  108           | RETURN . SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 55
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 56
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 12

   48 lvalue: LOCL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 13

   88 const: TRUE .

    $default  reduce using rule 88 (const)


State 14

   89 const: FALSE .

    $default  reduce using rule 89 (const)


State 15

   87 const: NIL .

    $default  reduce using rule 87 (const)


State 16

   36 term: NOT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 58
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 17

   35 term: MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 59
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 18

   37 term: DPLUS . lvalue

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 60
    DCOLON        shift, and go to state 24

    lvalue  go to state 61
    member  go to state 35
    call    go to state 62


State 19

   39 term: DMINUS . lvalue

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 60
    DCOLON        shift, and go to state 24

    lvalue  go to state 63
    member  go to state 35
    call    go to state 62


State 20

   71 block: LBRACKET . @1 stmt program RBRACKET
   73      | LBRACKET . $@2 RBRACKET

    RBRACKET  reduce using rule 72 ($@2)
    $default  reduce using rule 70 (@1)

    @1   go to state 64
    $@2  go to state 65


State 21

   65 objectdef: LSBRACKET . elist RSBRACKET
   66          | LSBRACKET . indexed RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 66
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr   go to state 30
    expr         go to state 67
    term         go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 68
    objectdef    go to state 37
    indexed      go to state 69
    indexedelem  go to state 70
    const        go to state 41


State 22

   34 term: LPARENTHESIS . expr RPARENTHESIS
   45 primary: LPARENTHESIS . funcdef RPARENTHESIS
   57 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 10
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 71
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    funcprefix  go to state 39
    funcdef     go to state 72
    const       go to state 41


State 23

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 24

   49 lvalue: DCOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 73


State 25

    0 $accept: program . $end

    $end  shift, and go to state 74


State 26

    1 program: stmts .
    4 stmts: stmts . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 75
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 27

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


State 28

   10 stmt: break .

    $default  reduce using rule 10 (stmt)


State 29

   11 stmt: continue .

    $default  reduce using rule 11 (stmt)


State 30

   32 expr: assignexpr .

    $default  reduce using rule 32 (expr)


State 31

    5 stmt: expr . SEMICOLON
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 89


State 32

   33 expr: term .

    $default  reduce using rule 33 (expr)


State 33

   41 term: primary .

    $default  reduce using rule 41 (term)


State 34

   17 assignexpr: lvalue . ASSIGN expr
   38 term: lvalue . DPLUS
   40     | lvalue . DMINUS
   42 primary: lvalue .
   51 member: lvalue . DOT IDENTIFIER
   52       | lvalue . LSBRACKET expr RSBRACKET
   56 call: lvalue . callsuffix

    ASSIGN        shift, and go to state 90
    DPLUS         shift, and go to state 91
    DMINUS        shift, and go to state 92
    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 42 (primary)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 35

   50 lvalue: member .

    $default  reduce using rule 50 (lvalue)


State 36

   43 primary: call .
   53 member: call . DOT IDENTIFIER
   54       | call . LSBRACKET expr RSBRACKET
   55 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 100
    LPARENTHESIS  shift, and go to state 101
    DOT           shift, and go to state 102

    $default  reduce using rule 43 (primary)


State 37

   44 primary: objectdef .

    $default  reduce using rule 44 (primary)


State 38

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 39

   83 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    LPARENTHESIS  shift, and go to state 103

    funcargs  go to state 104


State 40

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 41

   46 primary: const .

    $default  reduce using rule 46 (primary)


State 42

   95 ifstmt: ifprefix . stmt
   96       | ifprefix . stmt elseprefix stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 105
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 43

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 44

  102 whilestmt: whilestart . whilecond loopstmt

    LPARENTHESIS  shift, and go to state 106

    whilecond  go to state 107


State 45

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 46

  106 forstmt: forprefix . N elist RPARENTHESIS N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 108


State 47

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 48

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 49

   15 break: BREAK SEMICOLON .

    $default  reduce using rule 15 (break)


State 50

   16 continue: CONTINUE SEMICOLON .

    $default  reduce using rule 16 (continue)


State 51

   93 ifprefix: IF LPARENTHESIS . expr RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 109
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 52

  105 forprefix: FOR LPARENTHESIS . elist SEMICOLON M expr SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 110
    objectdef   go to state 37
    const       go to state 41


State 53

   76 funcname: IDENTIFIER .

    $default  reduce using rule 76 (funcname)


State 54

   78 funcprefix: FUNCTION funcname .

    $default  reduce using rule 78 (funcprefix)


State 55

  108 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 108 (returnstmt)


State 56

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
  107 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 111


State 57

   48 lvalue: LOCL IDENTIFIER .

    $default  reduce using rule 48 (lvalue)


State 58

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   36 term: NOT expr .

    $default  reduce using rule 36 (term)


State 59

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   35 term: MINUS expr .

    $default  reduce using rule 35 (term)


State 60

   57 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    FUNCTION  shift, and go to state 10

    funcprefix  go to state 39
    funcdef     go to state 112


State 61

   37 term: DPLUS lvalue .
   51 member: lvalue . DOT IDENTIFIER
   52       | lvalue . LSBRACKET expr RSBRACKET
   56 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 37 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 62

   53 member: call . DOT IDENTIFIER
   54       | call . LSBRACKET expr RSBRACKET
   55 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 100
    LPARENTHESIS  shift, and go to state 101
    DOT           shift, and go to state 102


State 63

   39 term: DMINUS lvalue .
   51 member: lvalue . DOT IDENTIFIER
   52       | lvalue . LSBRACKET expr RSBRACKET
   56 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 93
    LPARENTHESIS  shift, and go to state 94
    DOT           shift, and go to state 95
    DDOT          shift, and go to state 96

    $default  reduce using rule 39 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 64

   71 block: LBRACKET @1 . stmt program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 113
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 65

   73 block: LBRACKET $@2 . RBRACKET

    RBRACKET  shift, and go to state 114


State 66

   69 indexedelem: LBRACKET . expr COLON expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 115
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 67

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   63 elist: expr .

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 63 (elist)


State 68

   62 elist: elist . COMMA expr
   65 objectdef: LSBRACKET elist . RSBRACKET

    RSBRACKET  shift, and go to state 116
    COMMA      shift, and go to state 117


State 69

   66 objectdef: LSBRACKET indexed . RSBRACKET
   67 indexed: indexed . COMMA indexedelem

    RSBRACKET  shift, and go to state 118
    COMMA      shift, and go to state 119


State 70

   68 indexed: indexedelem .

    $default  reduce using rule 68 (indexed)


State 71

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   34 term: LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 120


State 72

   45 primary: LPARENTHESIS funcdef . RPARENTHESIS
   57 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 121


State 73

   49 lvalue: DCOLON IDENTIFIER .

    $default  reduce using rule 49 (lvalue)


State 74

    0 $accept: program $end .

    $default  accept


State 75

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


State 76

   30 expr: expr AND . Z expr Z

    $default  reduce using rule 18 (Z)

    Z  go to state 122


State 77

   31 expr: expr OR . Z expr Z

    $default  reduce using rule 18 (Z)

    Z  go to state 123


State 78

   19 expr: expr PLUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 124
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 79

   20 expr: expr MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 125
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 80

   21 expr: expr MULTIPLY . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 126
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 81

   22 expr: expr DIVIDE . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 127
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 82

   23 expr: expr MODULO . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 128
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 83

   24 expr: expr EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 129
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 84

   25 expr: expr DIFFERENT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 130
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 85

   26 expr: expr BIGGER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 131
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 86

   28 expr: expr SMALLER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 132
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 87

   27 expr: expr BIGGER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 133
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 88

   29 expr: expr SMALLER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 134
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 89

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 90

   17 assignexpr: lvalue ASSIGN . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 135
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 91

   38 term: lvalue DPLUS .

    $default  reduce using rule 38 (term)


State 92

   40 term: lvalue DMINUS .

    $default  reduce using rule 40 (term)


State 93

   52 member: lvalue LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 136
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 94

   60 normcall: LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 137
    objectdef   go to state 37
    const       go to state 41


State 95

   51 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 96

   61 methodcall: DDOT . IDENTIFIER LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER  shift, and go to state 139


State 97

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 98

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 99

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 100

   54 member: call LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 140
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 101

   55 call: call LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 141
    objectdef   go to state 37
    const       go to state 41


State 102

   53 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 103

   81 funcargs: LPARENTHESIS . $@3 idlist $@4 RPARENTHESIS

    $default  reduce using rule 79 ($@3)

    $@3  go to state 143


State 104

   83 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 74 (funcblockstart)

    funcblockstart  go to state 144


State 105

   95 ifstmt: ifprefix stmt .
   96       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 95 (ifstmt)]
    $default  reduce using rule 95 (ifstmt)

    elseprefix  go to state 146


State 106

  101 whilecond: LPARENTHESIS . expr RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 147
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 107

  102 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 97 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 149


State 108

  106 forstmt: forprefix N . elist RPARENTHESIS N loopstmt N

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 150
    objectdef   go to state 37
    const       go to state 41


State 109

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   93 ifprefix: IF LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 151


State 110

   62 elist: elist . COMMA expr
  105 forprefix: FOR LPARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 152
    COMMA      shift, and go to state 117


State 111

  107 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


State 112

   57 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 153


State 113

   71 block: LBRACKET @1 stmt . program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 154
    stmts       go to state 26
    stmt        go to state 27
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 114

   73 block: LBRACKET $@2 RBRACKET .

    $default  reduce using rule 73 (block)


State 115

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   69 indexedelem: LBRACKET expr . COLON expr RBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    COLON          shift, and go to state 155


State 116

   65 objectdef: LSBRACKET elist RSBRACKET .

    $default  reduce using rule 65 (objectdef)


State 117

   62 elist: elist COMMA . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 156
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 118

   66 objectdef: LSBRACKET indexed RSBRACKET .

    $default  reduce using rule 66 (objectdef)


State 119

   67 indexed: indexed COMMA . indexedelem

    LBRACKET  shift, and go to state 66

    indexedelem  go to state 157


State 120

   34 term: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 34 (term)


State 121

   45 primary: LPARENTHESIS funcdef RPARENTHESIS .
   57 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 158

    $default  reduce using rule 45 (primary)


State 122

   30 expr: expr AND Z . expr Z

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 159
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 123

   31 expr: expr OR Z . expr Z

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 160
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 124

   19 expr: expr . PLUS expr
   19     | expr PLUS expr .
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 19 (expr)


State 125

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   20     | expr MINUS expr .
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    $default  reduce using rule 20 (expr)


State 126

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   21     | expr MULTIPLY expr .
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    $default  reduce using rule 21 (expr)


State 127

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   22     | expr DIVIDE expr .
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    $default  reduce using rule 22 (expr)


State 128

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   23     | expr MODULO expr .
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    $default  reduce using rule 23 (expr)


State 129

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 130

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   25     | expr DIFFERENT expr .
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 131

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   26     | expr BIGGER expr .
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 132

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   28     | expr SMALLER expr .
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 133

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   27     | expr BIGGER_EQUAL expr .
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 134

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   29     | expr SMALLER_EQUAL expr .
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    PLUS      shift, and go to state 78
    MINUS     shift, and go to state 79
    MULTIPLY  shift, and go to state 80
    DIVIDE    shift, and go to state 81
    MODULO    shift, and go to state 82

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 135

   17 assignexpr: lvalue ASSIGN expr .
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 17 (assignexpr)


State 136

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   52 member: lvalue LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RSBRACKET      shift, and go to state 161


State 137

   60 normcall: LPARENTHESIS elist . RPARENTHESIS
   62 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 162
    COMMA         shift, and go to state 117


State 138

   51 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 51 (member)


State 139

   61 methodcall: DDOT IDENTIFIER . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 163


State 140

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   54 member: call LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RSBRACKET      shift, and go to state 164


State 141

   55 call: call LPARENTHESIS elist . RPARENTHESIS
   62 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 165
    COMMA         shift, and go to state 117


State 142

   53 member: call DOT IDENTIFIER .

    $default  reduce using rule 53 (member)


State 143

   81 funcargs: LPARENTHESIS $@3 . idlist $@4 RPARENTHESIS

    IDENTIFIER  shift, and go to state 166

    $default  reduce using rule 92 (idlist)

    idlist  go to state 167


State 144

   83 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    LBRACKET  shift, and go to state 20

    block     go to state 168
    funcbody  go to state 169


State 145

   94 elseprefix: ELSE .

    $default  reduce using rule 94 (elseprefix)


State 146

   96 ifstmt: ifprefix stmt elseprefix . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 170
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 147

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
  101 whilecond: LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RPARENTHESIS   shift, and go to state 171


State 148

   99 loopstmt: loopstart . stmt loopend

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    BREAK         shift, and go to state 5
    CONTINUE      shift, and go to state 6
    IF            shift, and go to state 7
    WHILE         shift, and go to state 8
    FOR           shift, and go to state 9
    FUNCTION      shift, and go to state 10
    RETURN        shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 172
    break       go to state 28
    continue    go to state 29
    assignexpr  go to state 30
    expr        go to state 31
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 149

  102 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 102 (whilestmt)


State 150

   62 elist: elist . COMMA expr
  106 forstmt: forprefix N elist . RPARENTHESIS N loopstmt N

    RPARENTHESIS  shift, and go to state 173
    COMMA         shift, and go to state 117


State 151

   93 ifprefix: IF LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 93 (ifprefix)


State 152

  105 forprefix: FOR LPARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 104 (M)

    M  go to state 174


State 153

   57 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 158


State 154

   71 block: LBRACKET @1 stmt program . RBRACKET

    RBRACKET  shift, and go to state 175


State 155

   69 indexedelem: LBRACKET expr COLON . expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 176
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 156

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   62 elist: elist COMMA expr .

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    $default  reduce using rule 62 (elist)


State 157

   67 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 67 (indexed)


State 158

   57 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 177
    objectdef   go to state 37
    const       go to state 41


State 159

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   30     | expr AND Z expr . Z
   31     | expr . OR Z expr Z

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    AND            [reduce using rule 18 (Z)]
    OR             [reduce using rule 18 (Z)]
    PLUS           [reduce using rule 18 (Z)]
    MINUS          [reduce using rule 18 (Z)]
    MULTIPLY       [reduce using rule 18 (Z)]
    DIVIDE         [reduce using rule 18 (Z)]
    MODULO         [reduce using rule 18 (Z)]
    EQUAL          [reduce using rule 18 (Z)]
    DIFFERENT      [reduce using rule 18 (Z)]
    BIGGER         [reduce using rule 18 (Z)]
    SMALLER        [reduce using rule 18 (Z)]
    BIGGER_EQUAL   [reduce using rule 18 (Z)]
    SMALLER_EQUAL  [reduce using rule 18 (Z)]
    $default       reduce using rule 18 (Z)

    Z  go to state 178


State 160

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   31     | expr OR Z expr . Z

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88

    AND            [reduce using rule 18 (Z)]
    OR             [reduce using rule 18 (Z)]
    PLUS           [reduce using rule 18 (Z)]
    MINUS          [reduce using rule 18 (Z)]
    MULTIPLY       [reduce using rule 18 (Z)]
    DIVIDE         [reduce using rule 18 (Z)]
    MODULO         [reduce using rule 18 (Z)]
    EQUAL          [reduce using rule 18 (Z)]
    DIFFERENT      [reduce using rule 18 (Z)]
    BIGGER         [reduce using rule 18 (Z)]
    SMALLER        [reduce using rule 18 (Z)]
    BIGGER_EQUAL   [reduce using rule 18 (Z)]
    SMALLER_EQUAL  [reduce using rule 18 (Z)]
    $default       reduce using rule 18 (Z)

    Z  go to state 179


State 161

   52 member: lvalue LSBRACKET expr RSBRACKET .

    $default  reduce using rule 52 (member)


State 162

   60 normcall: LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 60 (normcall)


State 163

   61 methodcall: DDOT IDENTIFIER LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 64 (elist)

    assignexpr  go to state 30
    expr        go to state 67
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 180
    objectdef   go to state 37
    const       go to state 41


State 164

   54 member: call LSBRACKET expr RSBRACKET .

    $default  reduce using rule 54 (member)


State 165

   55 call: call LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 55 (call)


State 166

   90 idlist: IDENTIFIER . COMMA idlist
   91       | IDENTIFIER .

    COMMA  shift, and go to state 181

    $default  reduce using rule 91 (idlist)


State 167

   81 funcargs: LPARENTHESIS $@3 idlist . $@4 RPARENTHESIS

    $default  reduce using rule 80 ($@4)

    $@4  go to state 182


State 168

   82 funcbody: block .

    $default  reduce using rule 82 (funcbody)


State 169

   83 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 75 (funcblockend)

    funcblockend  go to state 183


State 170

   96 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 96 (ifstmt)


State 171

  101 whilecond: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 101 (whilecond)


State 172

   99 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 98 (loopend)

    loopend  go to state 184


State 173

  106 forstmt: forprefix N elist RPARENTHESIS . N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 185


State 174

  105 forprefix: FOR LPARENTHESIS elist SEMICOLON M . expr SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 30
    expr        go to state 186
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 175

   71 block: LBRACKET @1 stmt program RBRACKET .

    $default  reduce using rule 71 (block)


State 176

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
   69 indexedelem: LBRACKET expr COLON expr . RBRACKET

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    RBRACKET       shift, and go to state 187


State 177

   57 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist . RPARENTHESIS
   62 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 188
    COMMA         shift, and go to state 117


State 178

   30 expr: expr AND Z expr Z .

    $default  reduce using rule 30 (expr)


State 179

   31 expr: expr OR Z expr Z .

    $default  reduce using rule 31 (expr)


State 180

   61 methodcall: DDOT IDENTIFIER LPARENTHESIS elist . RPARENTHESIS
   62 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 189
    COMMA         shift, and go to state 117


State 181

   90 idlist: IDENTIFIER COMMA . idlist

    IDENTIFIER  shift, and go to state 166

    $default  reduce using rule 92 (idlist)

    idlist  go to state 190


State 182

   81 funcargs: LPARENTHESIS $@3 idlist $@4 . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 191


State 183

   83 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 83 (funcdef)


State 184

   99 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 99 (loopstmt)


State 185

  106 forstmt: forprefix N elist RPARENTHESIS N . loopstmt N

    $default  reduce using rule 97 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 192


State 186

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . MULTIPLY expr
   22     | expr . DIVIDE expr
   23     | expr . MODULO expr
   24     | expr . EQUAL expr
   25     | expr . DIFFERENT expr
   26     | expr . BIGGER expr
   27     | expr . BIGGER_EQUAL expr
   28     | expr . SMALLER expr
   29     | expr . SMALLER_EQUAL expr
   30     | expr . AND Z expr Z
   31     | expr . OR Z expr Z
  105 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND            shift, and go to state 76
    OR             shift, and go to state 77
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MULTIPLY       shift, and go to state 80
    DIVIDE         shift, and go to state 81
    MODULO         shift, and go to state 82
    EQUAL          shift, and go to state 83
    DIFFERENT      shift, and go to state 84
    BIGGER         shift, and go to state 85
    SMALLER        shift, and go to state 86
    BIGGER_EQUAL   shift, and go to state 87
    SMALLER_EQUAL  shift, and go to state 88
    SEMICOLON      shift, and go to state 193


State 187

   69 indexedelem: LBRACKET expr COLON expr RBRACKET .

    $default  reduce using rule 69 (indexedelem)


State 188

   57 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 57 (call)


State 189

   61 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 61 (methodcall)


State 190

   90 idlist: IDENTIFIER COMMA idlist .

    $default  reduce using rule 90 (idlist)


State 191

   81 funcargs: LPARENTHESIS $@3 idlist $@4 RPARENTHESIS .

    $default  reduce using rule 81 (funcargs)


State 192

  106 forstmt: forprefix N elist RPARENTHESIS N loopstmt . N

    $default  reduce using rule 103 (N)

    N  go to state 194


State 193

  105 forprefix: FOR LPARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 105 (forprefix)


State 194

  106 forstmt: forprefix N elist RPARENTHESIS N loopstmt N .

    $default  reduce using rule 106 (forstmt)
