State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmts
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 assignexpr: lvalue ASSIGN expr

   15 expr: expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTIPLY expr
   18     | expr DIVIDE expr
   19     | expr MODULO expr
   20     | expr EQUAL expr
   21     | expr DIFFERENT expr
   22     | expr BIGGER expr
   23     | expr BIGGER_EQUAL expr
   24     | expr SMALLER expr
   25     | expr SMALLER_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | assignexpr
   29     | term

   30 term: LPARENTHESIS expr RPARENTHESIS
   31     | MINUS expr
   32     | NOT expr

   33 $@1: %empty

   34 term: DPLUS lvalue $@1
   35     | lvalue DPLUS
   36     | DMINUS lvalue
   37     | lvalue DMINUS
   38     | primary

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LPARENTHESIS funcdef RPARENTHESIS
   43        | const

   44 lvalue: IDENTIFIER
   45       | LOCL IDENTIFIER
   46       | DCOLON IDENTIFIER

   47 $@2: %empty

   48 lvalue: member $@2

   49 member: lvalue DOT IDENTIFIER
   50       | lvalue LSBRACKET expr RSBRACKET
   51       | call DOT IDENTIFIER
   52       | call LSBRACKET expr RSBRACKET

   53 call: call LPARENTHESIS elist RPARENTHESIS
   54     | lvalue callsuffix
   55     | LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: LPARENTHESIS elist RPARENTHESIS

   59 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS

   60 elist: elist COMMA expr
   61      | expr
   62      | %empty

   63 objectdef: LSBRACKET elist RSBRACKET
   64          | LSBRACKET indexed RSBRACKET

   65 indexed: indexed COMMA indexedelem
   66        | indexedelem

   67 indexedelem: LBRACKET expr COLON expr RBRACKET

   68 $@3: %empty

   69 block: LBRACKET $@3 stmt program RBRACKET

   70 $@4: %empty

   71 block: LBRACKET $@4 RBRACKET

   72 $@5: %empty

   73 $@6: %empty

   74 $@7: %empty

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 idlist $@7 RPARENTHESIS block

   76 $@8: %empty

   77 $@9: %empty

   78 $@10: %empty

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 idlist $@10 RPARENTHESIS block

   80 const: INTEGER
   81      | STRING
   82      | FLOAT
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 idlist: IDENTIFIER COMMA idlist
   87       | IDENTIFIER
   88       | %empty

   89 ifstmt: IF LPARENTHESIS expr RPARENTHESIS stmt
   90       | IF LPARENTHESIS expr RPARENTHESIS stmt ELSE stmt

   91 $@11: %empty

   92 whilestmt: WHILE $@11 LPARENTHESIS expr RPARENTHESIS stmt

   93 $@12: %empty

   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt

   95 returnstmt: RETURN expr SEMICOLON
   96           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 44 45 46 49 51 59 75 86 87
STRING (259) 81
INTEGER (260) 80
FLOAT (261) 82
IF (262) 89 90
ELSE (263) 90
WHILE (264) 92
FOR (265) 94
FUNCTION (266) 75 79
RETURN (267) 95 96
BREAK (268) 9
CONTINUE (269) 10
LOCL (270) 45
TRUE (271) 84
FALSE (272) 85
NIL (273) 83
AND (274) 26
OR (275) 27
NOT (276) 32
ASSIGN (277) 14
PLUS (278) 15
MINUS (279) 16 31
MULTIPLY (280) 17
DIVIDE (281) 18
MODULO (282) 19
DPLUS (283) 34 35
DMINUS (284) 36 37
EQUAL (285) 20
DIFFERENT (286) 21
BIGGER (287) 22
SMALLER (288) 24
BIGGER_EQUAL (289) 23
SMALLER_EQUAL (290) 25
LBRACKET (291) 67 69 71
RBRACKET (292) 67 69 71
LSBRACKET (293) 50 52 63 64
RSBRACKET (294) 50 52 63 64
LPARENTHESIS (295) 30 42 53 55 58 59 75 79 89 90 92 94
RPARENTHESIS (296) 30 42 53 55 58 59 75 79 89 90 92 94
SEMICOLON (297) 4 9 10 13 94 95 96
COMMA (298) 60 65 86
COLON (299) 67
DCOLON (300) 46
DOT (301) 49 51
DDOT (302) 59
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0 69
stmts (51)
    on left: 2 3, on right: 1 2
stmt (52)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 69 89 90 92 94
assignexpr (53)
    on left: 14, on right: 28
expr (54)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    4 14 15 16 17 18 19 20 21 22 23 24 25 26 27 30 31 32 50 52 60 61
    67 89 90 92 94 95
term (55)
    on left: 30 31 32 34 35 36 37 38, on right: 29
$@1 (56)
    on left: 33, on right: 34
primary (57)
    on left: 39 40 41 42 43, on right: 38
lvalue (58)
    on left: 44 45 46 48, on right: 14 34 35 36 37 39 49 50 54
$@2 (59)
    on left: 47, on right: 48
member (60)
    on left: 49 50 51 52, on right: 48
call (61)
    on left: 53 54 55, on right: 40 51 52 53
callsuffix (62)
    on left: 56 57, on right: 54
normcall (63)
    on left: 58, on right: 56
methodcall (64)
    on left: 59, on right: 57
elist (65)
    on left: 60 61 62, on right: 53 55 58 59 60 63 94
objectdef (66)
    on left: 63 64, on right: 41
indexed (67)
    on left: 65 66, on right: 64 65
indexedelem (68)
    on left: 67, on right: 65 66
block (69)
    on left: 69 71, on right: 11 75 79
$@3 (70)
    on left: 68, on right: 69
$@4 (71)
    on left: 70, on right: 71
funcdef (72)
    on left: 75 79, on right: 12 42 55
$@5 (73)
    on left: 72, on right: 75
$@6 (74)
    on left: 73, on right: 75
$@7 (75)
    on left: 74, on right: 75
$@8 (76)
    on left: 76, on right: 79
$@9 (77)
    on left: 77, on right: 79
$@10 (78)
    on left: 78, on right: 79
const (79)
    on left: 80 81 82 83 84 85, on right: 43
idlist (80)
    on left: 86 87 88, on right: 75 79 86
ifstmt (81)
    on left: 89 90, on right: 5
whilestmt (82)
    on left: 92, on right: 6
$@11 (83)
    on left: 91, on right: 92
forstmt (84)
    on left: 94, on right: 7
$@12 (85)
    on left: 93, on right: 94
returnstmt (86)
    on left: 95 96, on right: 8


State 0

    0 $accept: . program $end

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 1

   44 lvalue: IDENTIFIER .

    $default  reduce using rule 44 (lvalue)


State 2

   81 const: STRING .

    $default  reduce using rule 81 (const)


State 3

   80 const: INTEGER .

    $default  reduce using rule 80 (const)


State 4

   82 const: FLOAT .

    $default  reduce using rule 82 (const)


State 5

   89 ifstmt: IF . LPARENTHESIS expr RPARENTHESIS stmt
   90       | IF . LPARENTHESIS expr RPARENTHESIS stmt ELSE stmt

    LPARENTHESIS  shift, and go to state 43


State 6

   92 whilestmt: WHILE . $@11 LPARENTHESIS expr RPARENTHESIS stmt

    $default  reduce using rule 91 ($@11)

    $@11  go to state 44


State 7

   94 forstmt: FOR . $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt

    $default  reduce using rule 93 ($@12)

    $@12  go to state 45


State 8

   75 funcdef: FUNCTION . IDENTIFIER $@5 LPARENTHESIS $@6 idlist $@7 RPARENTHESIS block
   79        | FUNCTION . $@8 LPARENTHESIS $@9 idlist $@10 RPARENTHESIS block

    IDENTIFIER  shift, and go to state 46

    $default  reduce using rule 76 ($@8)

    $@8  go to state 47


State 9

   95 returnstmt: RETURN . expr SEMICOLON
   96           | RETURN . SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 48
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 49
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 10

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 11

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 12

   45 lvalue: LOCL . IDENTIFIER

    IDENTIFIER  shift, and go to state 52


State 13

   84 const: TRUE .

    $default  reduce using rule 84 (const)


State 14

   85 const: FALSE .

    $default  reduce using rule 85 (const)


State 15

   83 const: NIL .

    $default  reduce using rule 83 (const)


State 16

   32 term: NOT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 53
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 17

   31 term: MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 54
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   34 term: DPLUS . lvalue $@1

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 55
    DCOLON        shift, and go to state 24

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 19

   36 term: DMINUS . lvalue

    IDENTIFIER    shift, and go to state 1
    LOCL          shift, and go to state 12
    LPARENTHESIS  shift, and go to state 55
    DCOLON        shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 20

   69 block: LBRACKET . $@3 stmt program RBRACKET
   71      | LBRACKET . $@4 RBRACKET

    RBRACKET  reduce using rule 70 ($@4)
    $default  reduce using rule 68 ($@3)

    $@3  go to state 59
    $@4  go to state 60


State 21

   63 objectdef: LSBRACKET . elist RSBRACKET
   64          | LSBRACKET . indexed RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 61
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr   go to state 28
    expr         go to state 62
    term         go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 63
    objectdef    go to state 35
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 38


State 22

   30 term: LPARENTHESIS . expr RPARENTHESIS
   42 primary: LPARENTHESIS . funcdef RPARENTHESIS
   55 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 66
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 67
    const       go to state 38


State 23

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 24

   46 lvalue: DCOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 68


State 25

    0 $accept: program . $end

    $end  shift, and go to state 69


State 26

    1 program: stmts .

    $default  reduce using rule 1 (program)


State 27

    2 stmts: stmt . stmts

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 70
    stmt        go to state 27
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 28

   28 expr: assignexpr .

    $default  reduce using rule 28 (expr)


State 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    SEMICOLON      shift, and go to state 84


State 30

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 31

   38 term: primary .

    $default  reduce using rule 38 (term)


State 32

   14 assignexpr: lvalue . ASSIGN expr
   35 term: lvalue . DPLUS
   37     | lvalue . DMINUS
   39 primary: lvalue .
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . LSBRACKET expr RSBRACKET
   54 call: lvalue . callsuffix

    ASSIGN        shift, and go to state 85
    DPLUS         shift, and go to state 86
    DMINUS        shift, and go to state 87
    LSBRACKET     shift, and go to state 88
    LPARENTHESIS  shift, and go to state 89
    DOT           shift, and go to state 90
    DDOT          shift, and go to state 91

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 33

   48 lvalue: member . $@2

    $default  reduce using rule 47 ($@2)

    $@2  go to state 95


State 34

   40 primary: call .
   51 member: call . DOT IDENTIFIER
   52       | call . LSBRACKET expr RSBRACKET
   53 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 96
    LPARENTHESIS  shift, and go to state 97
    DOT           shift, and go to state 98

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 38

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 39

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 42

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 43

   89 ifstmt: IF LPARENTHESIS . expr RPARENTHESIS stmt
   90       | IF LPARENTHESIS . expr RPARENTHESIS stmt ELSE stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 99
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   92 whilestmt: WHILE $@11 . LPARENTHESIS expr RPARENTHESIS stmt

    LPARENTHESIS  shift, and go to state 100


State 45

   94 forstmt: FOR $@12 . LPARENTHESIS elist SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt

    LPARENTHESIS  shift, and go to state 101


State 46

   75 funcdef: FUNCTION IDENTIFIER . $@5 LPARENTHESIS $@6 idlist $@7 RPARENTHESIS block

    $default  reduce using rule 72 ($@5)

    $@5  go to state 102


State 47

   79 funcdef: FUNCTION $@8 . LPARENTHESIS $@9 idlist $@10 RPARENTHESIS block

    LPARENTHESIS  shift, and go to state 103


State 48

   96 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 96 (returnstmt)


State 49

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   95 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    SEMICOLON      shift, and go to state 104


State 50

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 51

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 52

   45 lvalue: LOCL IDENTIFIER .

    $default  reduce using rule 45 (lvalue)


State 53

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   32 term: NOT expr .

    $default  reduce using rule 32 (term)


State 54

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: MINUS expr .

    $default  reduce using rule 31 (term)


State 55

   55 call: LPARENTHESIS . funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    FUNCTION  shift, and go to state 8

    funcdef  go to state 105


State 56

   34 term: DPLUS lvalue . $@1
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . LSBRACKET expr RSBRACKET
   54 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 88
    LPARENTHESIS  shift, and go to state 89
    DOT           shift, and go to state 90
    DDOT          shift, and go to state 91

    $default  reduce using rule 33 ($@1)

    $@1         go to state 106
    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 57

   51 member: call . DOT IDENTIFIER
   52       | call . LSBRACKET expr RSBRACKET
   53 call: call . LPARENTHESIS elist RPARENTHESIS

    LSBRACKET     shift, and go to state 96
    LPARENTHESIS  shift, and go to state 97
    DOT           shift, and go to state 98


State 58

   36 term: DMINUS lvalue .
   49 member: lvalue . DOT IDENTIFIER
   50       | lvalue . LSBRACKET expr RSBRACKET
   54 call: lvalue . callsuffix

    LSBRACKET     shift, and go to state 88
    LPARENTHESIS  shift, and go to state 89
    DOT           shift, and go to state 90
    DDOT          shift, and go to state 91

    $default  reduce using rule 36 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 59

   69 block: LBRACKET $@3 . stmt program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 107
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 60

   71 block: LBRACKET $@4 . RBRACKET

    RBRACKET  shift, and go to state 108


State 61

   67 indexedelem: LBRACKET . expr COLON expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 109
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 62

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   61 elist: expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    $default  reduce using rule 61 (elist)


State 63

   60 elist: elist . COMMA expr
   63 objectdef: LSBRACKET elist . RSBRACKET

    RSBRACKET  shift, and go to state 110
    COMMA      shift, and go to state 111


State 64

   64 objectdef: LSBRACKET indexed . RSBRACKET
   65 indexed: indexed . COMMA indexedelem

    RSBRACKET  shift, and go to state 112
    COMMA      shift, and go to state 113


State 65

   66 indexed: indexedelem .

    $default  reduce using rule 66 (indexed)


State 66

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: LPARENTHESIS expr . RPARENTHESIS

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RPARENTHESIS   shift, and go to state 114


State 67

   42 primary: LPARENTHESIS funcdef . RPARENTHESIS
   55 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 115


State 68

   46 lvalue: DCOLON IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 69

    0 $accept: program $end .

    $default  accept


State 70

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


State 71

   26 expr: expr AND . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 116
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   27 expr: expr OR . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 117
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   15 expr: expr PLUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 118
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   16 expr: expr MINUS . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 119
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   17 expr: expr MULTIPLY . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 120
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   18 expr: expr DIVIDE . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 121
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   19 expr: expr MODULO . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 122
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   20 expr: expr EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 123
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   21 expr: expr DIFFERENT . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 124
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   22 expr: expr BIGGER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 125
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   24 expr: expr SMALLER . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 126
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   23 expr: expr BIGGER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 127
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   25 expr: expr SMALLER_EQUAL . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 128
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 85

   14 assignexpr: lvalue ASSIGN . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 129
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 86

   35 term: lvalue DPLUS .

    $default  reduce using rule 35 (term)


State 87

   37 term: lvalue DMINUS .

    $default  reduce using rule 37 (term)


State 88

   50 member: lvalue LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 130
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 89

   58 normcall: LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 131
    objectdef   go to state 35
    const       go to state 38


State 90

   49 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 132


State 91

   59 methodcall: DDOT . IDENTIFIER LPARENTHESIS elist RPARENTHESIS

    IDENTIFIER  shift, and go to state 133


State 92

   54 call: lvalue callsuffix .

    $default  reduce using rule 54 (call)


State 93

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


State 94

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


State 95

   48 lvalue: member $@2 .

    $default  reduce using rule 48 (lvalue)


State 96

   52 member: call LSBRACKET . expr RSBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 134
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 97

   53 call: call LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 135
    objectdef   go to state 35
    const       go to state 38


State 98

   51 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 136


State 99

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   89 ifstmt: IF LPARENTHESIS expr . RPARENTHESIS stmt
   90       | IF LPARENTHESIS expr . RPARENTHESIS stmt ELSE stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RPARENTHESIS   shift, and go to state 137


State 100

   92 whilestmt: WHILE $@11 LPARENTHESIS . expr RPARENTHESIS stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 138
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 101

   94 forstmt: FOR $@12 LPARENTHESIS . elist SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 139
    objectdef   go to state 35
    const       go to state 38


State 102

   75 funcdef: FUNCTION IDENTIFIER $@5 . LPARENTHESIS $@6 idlist $@7 RPARENTHESIS block

    LPARENTHESIS  shift, and go to state 140


State 103

   79 funcdef: FUNCTION $@8 LPARENTHESIS . $@9 idlist $@10 RPARENTHESIS block

    $default  reduce using rule 77 ($@9)

    $@9  go to state 141


State 104

   95 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 95 (returnstmt)


State 105

   55 call: LPARENTHESIS funcdef . RPARENTHESIS LPARENTHESIS elist RPARENTHESIS

    RPARENTHESIS  shift, and go to state 142


State 106

   34 term: DPLUS lvalue $@1 .

    $default  reduce using rule 34 (term)


State 107

   69 block: LBRACKET $@3 stmt . program RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 143
    stmts       go to state 26
    stmt        go to state 27
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 108

   71 block: LBRACKET $@4 RBRACKET .

    $default  reduce using rule 71 (block)


State 109

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   67 indexedelem: LBRACKET expr . COLON expr RBRACKET

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    COLON          shift, and go to state 144


State 110

   63 objectdef: LSBRACKET elist RSBRACKET .

    $default  reduce using rule 63 (objectdef)


State 111

   60 elist: elist COMMA . expr

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 145
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 112

   64 objectdef: LSBRACKET indexed RSBRACKET .

    $default  reduce using rule 64 (objectdef)


State 113

   65 indexed: indexed COMMA . indexedelem

    LBRACKET  shift, and go to state 61

    indexedelem  go to state 146


State 114

   30 term: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 30 (term)


State 115

   42 primary: LPARENTHESIS funcdef RPARENTHESIS .
   55 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 147

    $default  reduce using rule 42 (primary)


State 116

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    $default  reduce using rule 26 (expr)


State 117

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    $default  reduce using rule 27 (expr)


State 118

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    $default  reduce using rule 15 (expr)


State 119

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    $default  reduce using rule 16 (expr)


State 120

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   17     | expr MULTIPLY expr .
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   18     | expr DIVIDE expr .
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   20     | expr EQUAL expr .
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   21     | expr DIFFERENT expr .
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   22     | expr BIGGER expr .
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   24     | expr SMALLER expr .
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   23     | expr BIGGER_EQUAL expr .
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   25     | expr SMALLER_EQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    MULTIPLY  shift, and go to state 75
    DIVIDE    shift, and go to state 76
    MODULO    shift, and go to state 77

    BIGGER         error (nonassociative)
    SMALLER        error (nonassociative)
    BIGGER_EQUAL   error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   14 assignexpr: lvalue ASSIGN expr .
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    $default  reduce using rule 14 (assignexpr)


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: lvalue LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RSBRACKET      shift, and go to state 148


State 131

   58 normcall: LPARENTHESIS elist . RPARENTHESIS
   60 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 149
    COMMA         shift, and go to state 111


State 132

   49 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 49 (member)


State 133

   59 methodcall: DDOT IDENTIFIER . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 150


State 134

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   52 member: call LSBRACKET expr . RSBRACKET

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RSBRACKET      shift, and go to state 151


State 135

   53 call: call LPARENTHESIS elist . RPARENTHESIS
   60 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 152
    COMMA         shift, and go to state 111


State 136

   51 member: call DOT IDENTIFIER .

    $default  reduce using rule 51 (member)


State 137

   89 ifstmt: IF LPARENTHESIS expr RPARENTHESIS . stmt
   90       | IF LPARENTHESIS expr RPARENTHESIS . stmt ELSE stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 153
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 138

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 whilestmt: WHILE $@11 LPARENTHESIS expr . RPARENTHESIS stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RPARENTHESIS   shift, and go to state 154


State 139

   60 elist: elist . COMMA expr
   94 forstmt: FOR $@12 LPARENTHESIS elist . SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt

    SEMICOLON  shift, and go to state 155
    COMMA      shift, and go to state 111


State 140

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS . $@6 idlist $@7 RPARENTHESIS block

    $default  reduce using rule 73 ($@6)

    $@6  go to state 156


State 141

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 . idlist $@10 RPARENTHESIS block

    IDENTIFIER  shift, and go to state 157

    $default  reduce using rule 88 (idlist)

    idlist  go to state 158


State 142

   55 call: LPARENTHESIS funcdef RPARENTHESIS . LPARENTHESIS elist RPARENTHESIS

    LPARENTHESIS  shift, and go to state 147


State 143

   69 block: LBRACKET $@3 stmt program . RBRACKET

    RBRACKET  shift, and go to state 159


State 144

   67 indexedelem: LBRACKET expr COLON . expr RBRACKET

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 160
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 145

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   60 elist: elist COMMA expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83

    $default  reduce using rule 60 (elist)


State 146

   65 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 65 (indexed)


State 147

   55 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 161
    objectdef   go to state 35
    const       go to state 38


State 148

   50 member: lvalue LSBRACKET expr RSBRACKET .

    $default  reduce using rule 50 (member)


State 149

   58 normcall: LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 58 (normcall)


State 150

   59 methodcall: DDOT IDENTIFIER LPARENTHESIS . elist RPARENTHESIS

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 162
    objectdef   go to state 35
    const       go to state 38


State 151

   52 member: call LSBRACKET expr RSBRACKET .

    $default  reduce using rule 52 (member)


State 152

   53 call: call LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 53 (call)


State 153

   89 ifstmt: IF LPARENTHESIS expr RPARENTHESIS stmt .
   90       | IF LPARENTHESIS expr RPARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 163

    ELSE      [reduce using rule 89 (ifstmt)]
    $default  reduce using rule 89 (ifstmt)


State 154

   92 whilestmt: WHILE $@11 LPARENTHESIS expr RPARENTHESIS . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 164
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 155

   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON . expr SEMICOLON elist RPARENTHESIS stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    assignexpr  go to state 28
    expr        go to state 165
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 156

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 . idlist $@7 RPARENTHESIS block

    IDENTIFIER  shift, and go to state 157

    $default  reduce using rule 88 (idlist)

    idlist  go to state 166


State 157

   86 idlist: IDENTIFIER . COMMA idlist
   87       | IDENTIFIER .

    COMMA  shift, and go to state 167

    $default  reduce using rule 87 (idlist)


State 158

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 idlist . $@10 RPARENTHESIS block

    $default  reduce using rule 78 ($@10)

    $@10  go to state 168


State 159

   69 block: LBRACKET $@3 stmt program RBRACKET .

    $default  reduce using rule 69 (block)


State 160

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   67 indexedelem: LBRACKET expr COLON expr . RBRACKET

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    RBRACKET       shift, and go to state 169


State 161

   55 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist . RPARENTHESIS
   60 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 170
    COMMA         shift, and go to state 111


State 162

   59 methodcall: DDOT IDENTIFIER LPARENTHESIS elist . RPARENTHESIS
   60 elist: elist . COMMA expr

    RPARENTHESIS  shift, and go to state 171
    COMMA         shift, and go to state 111


State 163

   90 ifstmt: IF LPARENTHESIS expr RPARENTHESIS stmt ELSE . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 172
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 164

   92 whilestmt: WHILE $@11 LPARENTHESIS expr RPARENTHESIS stmt .

    $default  reduce using rule 92 (whilestmt)


State 165

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . EQUAL expr
   21     | expr . DIFFERENT expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQUAL expr
   24     | expr . SMALLER expr
   25     | expr . SMALLER_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr . SEMICOLON elist RPARENTHESIS stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTIPLY       shift, and go to state 75
    DIVIDE         shift, and go to state 76
    MODULO         shift, and go to state 77
    EQUAL          shift, and go to state 78
    DIFFERENT      shift, and go to state 79
    BIGGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    BIGGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    SEMICOLON      shift, and go to state 173


State 166

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 idlist . $@7 RPARENTHESIS block

    $default  reduce using rule 74 ($@7)

    $@7  go to state 174


State 167

   86 idlist: IDENTIFIER COMMA . idlist

    IDENTIFIER  shift, and go to state 157

    $default  reduce using rule 88 (idlist)

    idlist  go to state 175


State 168

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 idlist $@10 . RPARENTHESIS block

    RPARENTHESIS  shift, and go to state 176


State 169

   67 indexedelem: LBRACKET expr COLON expr RBRACKET .

    $default  reduce using rule 67 (indexedelem)


State 170

   55 call: LPARENTHESIS funcdef RPARENTHESIS LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 55 (call)


State 171

   59 methodcall: DDOT IDENTIFIER LPARENTHESIS elist RPARENTHESIS .

    $default  reduce using rule 59 (methodcall)


State 172

   90 ifstmt: IF LPARENTHESIS expr RPARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 90 (ifstmt)


State 173

   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON . elist RPARENTHESIS stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    DCOLON        shift, and go to state 24

    $default  reduce using rule 62 (elist)

    assignexpr  go to state 28
    expr        go to state 62
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 177
    objectdef   go to state 35
    const       go to state 38


State 174

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 idlist $@7 . RPARENTHESIS block

    RPARENTHESIS  shift, and go to state 178


State 175

   86 idlist: IDENTIFIER COMMA idlist .

    $default  reduce using rule 86 (idlist)


State 176

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 idlist $@10 RPARENTHESIS . block

    LBRACKET  shift, and go to state 20

    block  go to state 179


State 177

   60 elist: elist . COMMA expr
   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON elist . RPARENTHESIS stmt

    RPARENTHESIS  shift, and go to state 180
    COMMA         shift, and go to state 111


State 178

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 idlist $@7 RPARENTHESIS . block

    LBRACKET  shift, and go to state 20

    block  go to state 181


State 179

   79 funcdef: FUNCTION $@8 LPARENTHESIS $@9 idlist $@10 RPARENTHESIS block .

    $default  reduce using rule 79 (funcdef)


State 180

   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON elist RPARENTHESIS . stmt

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    LOCL          shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    NOT           shift, and go to state 16
    MINUS         shift, and go to state 17
    DPLUS         shift, and go to state 18
    DMINUS        shift, and go to state 19
    LBRACKET      shift, and go to state 20
    LSBRACKET     shift, and go to state 21
    LPARENTHESIS  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DCOLON        shift, and go to state 24

    stmt        go to state 182
    assignexpr  go to state 28
    expr        go to state 29
    term        go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 181

   75 funcdef: FUNCTION IDENTIFIER $@5 LPARENTHESIS $@6 idlist $@7 RPARENTHESIS block .

    $default  reduce using rule 75 (funcdef)


State 182

   94 forstmt: FOR $@12 LPARENTHESIS elist SEMICOLON expr SEMICOLON elist RPARENTHESIS stmt .

    $default  reduce using rule 94 (forstmt)
